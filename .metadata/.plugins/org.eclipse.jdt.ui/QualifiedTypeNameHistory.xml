<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.domain.EntityScan"/>
    <fullyQualifiedTypeName name="javax.validation.Valid"/>
    <fullyQualifiedTypeName name="org.springframework.validation.BindingResult"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.controller.UserController"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.mvc.support.RedirectAttributes"/>
    <fullyQualifiedTypeName name="javax.websocket.server.PathParam"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.ModelAndView"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.sun.el.stream.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.context.MessageSource"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.context.MessageSourceProperties"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.repository.TaskRepository"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.model.Task"/>
    <fullyQualifiedTypeName name="com.sun.istack.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Size"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Min"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.security.SecurityConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.repository.UserRepository"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCrypt"/>
    <fullyQualifiedTypeName name="com.sun.tools.javac.launcher.Main"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.WebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.util.matcher.AntPathRequestMatcher"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="br.com.fiap.EpicTask.model.User"/>
    <fullyQualifiedTypeName name="java.security.Principal"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="jdk.nashorn.internal.objects.annotations.Getter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="org.hibernate.annotations.ManyToAny"/>
    <fullyQualifiedTypeName name="javax.persistence.FetchType"/>
</qualifiedTypeNameHistroy>
